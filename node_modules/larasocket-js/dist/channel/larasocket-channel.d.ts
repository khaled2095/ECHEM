/**
 * This class represents a Socket.io channel.
 */
import { Channel } from './channel';
import { EventFormatter } from '../util';
import { LarasocketManager } from '../util';
export declare class LarasocketChannel extends Channel {
    eventFormatter: EventFormatter;
    /**
     * The Socket.io client instance.
     */
    socket: LarasocketManager;
    /**
     * The name of the channel.
     */
    name: string;
    /**
     * Channel options.
     */
    options: any;
    /**
     * The event callbacks applied to the channel.
     */
    events: any;
    /**
     * Create a new class instance.
     */
    constructor(socket: LarasocketManager, name: string, options: any);
    /**
     * Subscribe to a Socket.io channel.
     */
    subscribe(): void;
    /**
     * Unsubscribe from channel and ubind event callbacks.
     */
    unsubscribe(): void;
    /**
     * Listen for an event on the channel instance.
     */
    listen(event: string, callback: () => void): LarasocketChannel;
    /**
     * Stop listening for an event on the channel instance.
     */
    stopListening(event: string): LarasocketChannel;
    /**
     * Bind the channel's socket to an event and store the callback.
     */
    on(event: string, callback: (data: any) => void): void;
    /**
     * Bind the channel's socket to an event and store the callback.
     */
    bind(event: string, callback: (channel: any, data: any) => void): void;
    /**
     * Unbind the channel's socket from all stored event callbacks.
     */
    unbind(): void;
}
